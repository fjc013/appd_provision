---
#
# - name: m2ee_centos.yml
# Add AppD appagent configuration directives to m2ee property files
#
# Use lineinfile for heavy lifting
#
# 0. dump line to be inserted
#
- name: Dump m2ee_jvmArg
  debug: msg="var m2ee_var {{ m2ee_jvmArg }} from vars"
  tags: m2ee

# 1. Modify /home/mxapp/.m2ee/m2ee.yaml
# To save a copy of the orignal, insert "backup=yes"
# within lineinfile block
#
- name: Modify javaopts within m2ee.yaml
  lineinfile: dest={{ m2ee_homeDir }}{{ m2ee_configDir }}{{ m2ee_configFile }}
    insertafter='javaopts'
    line="{{ m2ee_jvmArg }}"
  tags: m2ee
# "
# 2. Modify the felix.properties.template file
#
# Extract major path to file from YAML config
#
- name: Register partial path to template file
  shell: awk '/mxjar_repo/ {print $2}' {{ m2ee_homeDir }}{{ m2ee_configDir }}{{ m2ee_configFile }}
  register: m2ee_majorPath
  tags: [m2ee, felix]
#
- name: DEbug major path
  debug: var=m2ee_majorPath
  tags: [m2ee, felix]
# 
# Use new variable to register full path to template
# Registered variables are dicts, and act like dicks if 
# not used correctly. Most often, stdout is what's needed.
#
- name: Register full path to template file
  shell: find {{ m2ee_majorPath.stdout }} -name {{ m2ee_felixTemplate }} -print
  register: m2ee_templatePath
  tags: [m2ee, felix]
#
- name: debug full path
  debug: var=m2ee_templatePath
  tags: [m2ee, felix]
#
# Modify the template file. 
#
- name: insert boot delegation before system packages
  lineinfile: dest={{ m2ee_templatePath.stdout }}
    insertbefore="{{ m2ee_findSystem }}"
    line="{{ m2ee_bootDelegation }}"
  tags: [m2ee, felix]
# "
#
# Look at vars definition to see how to add a backslash at the end of a line
# spoiler alert: hackhackhack
#
- name: Change last line to continue
  lineinfile: dest={{ m2ee_templatePath.stdout }}
    regexp="{{ m2ee_findEnd }}"
    line="{{ m2ee_sunNioCs }}"
    state=present  
  tags: [m2ee, felix]
#
#
# Append a line to the end of the file
# DO NOT use a regexp clause!
#
- name: Add new class at end of template
  lineinfile: dest={{ m2ee_templatePath.stdout }}
    insertafter=EOF
    line="{{ m2ee_comSingularity }}"
  notify:
    - restart m2ee
  tags: [m2ee, felix]
#
- name: Send completion notice to Slack - simple, for now
  local_action:
    module: slack
    token: "{{ m2ee_SlackToken }}"
    channel: "{{ m2ee_SlackChannel }}"
    msg: "{{ inventory_hostname }} m2ee set up completed"
    username: "Root on {{ inventory_hostname }}"
  tags: [m2ee, felix]

